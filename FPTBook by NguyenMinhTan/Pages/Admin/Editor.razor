@page "/admin/products/edit/{id:long}"
@page "/admin/products/add"
@inherits OwningComponentBase<IStoreRepository>

<style>
	div.validation-message {color: rgb(220, 53, 69); font-weight: 500}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">
	@TitleText a product
</h3>

<EditForm Model="Product" OnValidSubmit="SaveProduct">
	<DataAnnotationsValidator />
	@if(Product.ProductID != 0)
	{
		<div class="form-group">
			<label> ID </label>
			<input class="form-control" disabled value="@Product.ProductID" />
		</div>
	}
		<div class="form-group">
			<label> Name </label>
			<ValidationMessage For="@(() => Product.ProductName)" />
			<InputText class="form-control" @bind-Value="@Product.ProductName" />
		</div>
		<div class="form-group">
			<label> Category </label>
			<ValidationMessage For="@(() => Product.ProductCategory)" />
			<InputText class="form-control" @bind-Value="@Product.ProductCategory" />
		</div>
		<div class="form-group">
			<label> Price </label>
			<ValidationMessage For="@(() => Product.ProductPrice)" />
			<InputNumber class="form-control" @bind-Value="@Product.ProductPrice" />
		</div>
		<div class="form-group">
			<label> Quantity </label>
			<ValidationMessage For="@(() => Product.ProductQuantity)" />
			<InputNumber class="form-control" @bind-Value="@Product.ProductQuantity" />
		</div>
		<div class="form-group">
			<label> Description </label>
			<ValidationMessage For="@(() => Product.ProductDescription)" />
			<InputText class="form-control" @bind-Value="@Product.ProductDescription" />
		</div>
		<div class="mt-2">
			<button type="submit" class="btn btn-@ThemeColor"> Save changes </button>
			<NavLink class="btn btn-secondary" href="/admin/products"> Cancel </NavLink>
		</div>
</EditForm>

@code {
	public IStoreRepository Repository => Service;

	[Inject]
	public NavigationManager? NavManager { get; set; }

	[Parameter]
	public long ID { get; set; } = 0;

	public Product Product { get; set; } = new Product();

	protected override void OnParametersSet()
	{
		if (ID != 0)
		{
			Product = Repository.Products.FirstOrDefault(p => p.ProductID == ID) ?? new();
		}
	}

	public void SaveProduct()
	{
		if (ID == 0)
		{
			Repository.CreateProduct(Product);
		}

		else
		{
			Repository.SaveProduct(Product);
		}

		NavManager?.NavigateTo("/admin/products");
	}

	public string ThemeColor => ID == 0 ? "primary" : "warning";
	public string TitleText => ID == 0 ? "Create" : "Edit";
}
